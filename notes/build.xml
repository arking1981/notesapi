<?xml version = "1.0" encoding = "UTF-8"?>

<project name="Notes" basedir="." default="usage">

	<!-- #### Change for your system. #### -->
	<property name="tomcat.home" value="/usr/local/Cellar/tomcat/8.5.11/libexec" />

	<!-- Leave the rest as they are. -->
	<property name="tomcat.lib" value="${tomcat.home}/lib" />
	<property name="deploy.path" value="${tomcat.home}/webapps" />

	<property name="src.dir" value="${basedir}/src" />
	<property name="build.dir" value="${basedir}/build" />
	<property name="dist.dir" value="${basedir}/dist" />
	<property name="war.name" value="(Please supply a name!)" />


	<property name="dist.lib.dir" location="${basedir}/dist/lib" />
	<property name="lib.dir" value="${basedir}/lib" />
	<property name="main-class" value="notes.NotesPublisher" />


	<path id="master-classpath">
		<fileset dir="${tomcat.lib}">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${src.dir}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>

	<target name="usage">
		<echo message="" />
		<echo message="${name} build file" />
		<echo message="" />
		<echo message="ant compile                 --> to compile only" />
		<echo message="ant deploy -Dwar.name=test1 --> to deploy test1.war" />
		<echo message="" />
	</target>

	<target name="clean" description="clean up">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
		<delete>
			<fileset dir="." includes="*.war" />
			<fileset dir="." includes="*.jar" />
		</delete>
	</target>

	<target name="prepare" depends="clean">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.dir}/WEB-INF" />
		<mkdir dir="${build.dir}/WEB-INF/classes" />
		<mkdir dir="${build.dir}/WEB-INF/lib" />
		<mkdir dir="${build.dir}/WEB-INF/data" />

		<!-- Copy files from source to build directory  -->
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
				<include name="*.jsp" />
				<include name="*.html" />
				<include name="*.js" />
				<include name="*.css" />
			</fileset>
		</copy>
		<copy todir="${build.dir}/WEB-INF">
			<fileset dir="${src.dir}">
				<include name="*.xml" />
			</fileset>
		</copy>
		<copy todir="${build.dir}/WEB-INF/data">
			<fileset dir="${src.dir}">
				<include name="*.db" />
			</fileset>
		</copy>
		<copy todir="${build.dir}/WEB-INF/lib">
			<fileset dir="${src.dir}">
				<include name="*.jar" />
			</fileset>
		</copy>
	</target>

	<target name="compile" depends="prepare" description="compile main source tree java files">
		<javac destdir="${build.dir}/WEB-INF/classes" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="deploy" depends="compile" description="deploy application as a war file">
		<delete>
			<fileset dir="${build.dir}" includes="*.java,*.db,*.jar,web.xml" />
		</delete>
		<war destfile="${war.name}.war" webxml="${build.dir}/WEB-INF/web.xml">
			<fileset dir="${build.dir}">
				<include name="**/*.*" />
			</fileset>
		</war>
		<copy todir="${deploy.path}" preservelastmodified="true">
			<fileset dir=".">
				<include name="*.war" />
			</fileset>
		</copy>
	</target>

	<path id="classpath">
		<fileset dir="${src.dir}/">
			<include name="*.jar" />
		</fileset>
	</path>

	<target name="compile4jar" description="compile the source ">
		<mkdir dir="${dist.dir}" />
		<javac includeantruntime="false" srcdir="${src.dir}" destdir="${dist.dir}" classpathref="classpath" />
	</target>



	<target name="copy-dependencies">

		<mkdir dir="${dist.lib.dir}" />

		<jar jarfile="${dist.lib.dir}/dependencies-all.jar">
			<zipgroupfileset dir="${src.dir}">
				<include name="**/*.jar" />
			</zipgroupfileset>
		</jar>

	</target>

	<target name="jar" depends="compile4jar, copy-dependencies" description="package, output to JAR">

		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.lib.dir}" />

		<jar jarfile="notes.jar" basedir="${dist.dir}">
			<manifest>
				<attribute name="Class-Path" value="." />
				<attribute name="Main-Class" value="${main-class}" />
			</manifest>
			<zipfileset src="${dist.lib.dir}/dependencies-all.jar" excludes="META-INF/*.SF" />
		</jar>

	</target>



</project>
